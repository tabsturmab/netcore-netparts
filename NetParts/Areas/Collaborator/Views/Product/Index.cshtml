@model X.PagedList.IPagedList<NetParts.Models.ProductAggregator.Product>
@inject NetParts.Libraries.Login.LoginCollaborator collaborator
@{
    ViewData["Title"] = "Index";
    var search = Context.Request.Query["search"];
}

<h1>@SR["Product"]</h1>

<br />
<br />
<form method="get">
    <div class="form-group">
        <label for="search"></label>
        <input type="text" name="search" id="search" value="@search" class="form-control" placeholder="Digite o nome do produto">
    </div>
    <button type="submit" class="btn btn-primary">OK</button>
</form>
<br />
<br />
@{ await Html.RenderPartialAsync("~/Views/Shared/_Message.cshtml"); }

<a asp-action="Create" class="btn btn-primary">@SR["Create"]</a>

<br />

@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">@SR["Part number"]</th>
                    <th scope="col">@SR["Description"]</th>
                    <th scope="col">@SR["Category"]</th>
                    <th scope="col">@SR["Manufacturer"]</th>

                    @if (collaborator.GetCollaborator() != null && collaborator.GetCollaborator().TypeCollaborator == CollaboratorTypeConstant.Administrador)
                    {
                        <th scope="col">@SR["Action"]</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (Product product in Model)
                {
                    <tr>
                        <td>@product.PartNumber</td>
                        <td>@product.Description</td>
                        <td>@product.Category.NameCategory</td>
                        <td>@product.Manufacturer.NameManufacturer</td>
                        <td>
                            @if (collaborator.GetCollaborator() != null && collaborator.GetCollaborator().TypeCollaborator == CollaboratorTypeConstant.Administrador)
                            {
                                <a asp-action="Update" asp-route-id="@product.IdProduct" class="btn btn-secondary">@SR["Update"]</a>
                                <a asp-action="Delete" asp-route-id="@product.IdProduct" class="btn btn-danger">@SR["Delete"]</a>
                            }
                            else
                            {

                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page, search = search }))

}
else
{
    <span>@SR["No registration registered!"]</span>
}