@model X.PagedList.IPagedList<NetParts.Models.Category>
@inject NetParts.Libraries.Login.LoginCollaborator collaborator
@{
    ViewData["Title"] = "Index";
}
<br />
<h1>@SR["Category"]</h1>

<a asp-action="Create" class="btn btn-primary">@SR["Create"]</a>

@{ await Html.RenderPartialAsync("~/Views/Shared/_Message.cshtml"); }
<br />
<br />
@if (Model.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th scope="col">@SR["Code"]</th>
                    <th scope="col">@SR["Name Category"]</th>
                    <th scope="col">@SR["Category Master Id"]</th>
                    @if (collaborator.GetCollaborator() != null && collaborator.GetCollaborator().TypeCollaborator == CollaboratorTypeConstant.Administrador)
                    {
                        <th scope="col">@SR["Action"]</th>
                    }


                </tr>
            </thead>
            <tbody>
                @foreach (Category category in Model)
                {
                    <tr>
                        <th scope="row">@category.IdCategory</th>
                        <td>@category.NameCategory</td>
                        <td>
                            @Html.DisplayFor(model => category.CategoryMaster.NameCategory)
                        </td>
                        <td>
                            @if (collaborator.GetCollaborator() != null && collaborator.GetCollaborator().TypeCollaborator == CollaboratorTypeConstant.Administrador)
                            {
                                <a asp-action="Update" asp-route-id="@category.IdCategory" class="btn btn-secondary">@SR["Update"]</a>
                                <a asp-action="Delete" asp-route-id="@category.IdCategory" class="btn btn-danger">@SR["Delete"]</a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page }))
}
else
{
    <span>@SR["No registration registered!"]</span>
}
